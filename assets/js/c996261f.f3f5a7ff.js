"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[478],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=m;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5340:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return u}});var r=n(2685),i=n(1244),o=(n(7378),n(5318)),l=["components"],a={title:"Polymorphic References",sidebar_position:6},p=void 0,s={unversionedId:"modeling/polymorphic-references",id:"modeling/polymorphic-references",title:"Polymorphic References",description:"Joist's polymorphic references enable modeling an entity (i.e. Book) that has a single field (i.e. a reference) that can be set to multiple (i.e. poly) types of other entities, but only 1 such entity at a time.",source:"@site/docs/modeling/polymorphic-references.md",sourceDirName:"modeling",slug:"/modeling/polymorphic-references",permalink:"/docs/modeling/polymorphic-references",draft:!1,editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/modeling/polymorphic-references.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Polymorphic References",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Enum Tables",permalink:"/docs/modeling/enum-tables"},next:{title:"Derived Fields",permalink:"/docs/modeling/derived-fields"}},c={},u=[{value:"Implementation",id:"implementation",level:3},{value:"Usage",id:"usage",level:3},{value:"Limitations",id:"limitations",level:3}],m={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Joist's polymorphic references enable modeling an entity (i.e. Book) that has a single field (i.e. a reference) that can be set to multiple (i.e. poly) types of other entities, but only 1 such entity at a time."),(0,o.kt)("p",null,"For example maybe a ",(0,o.kt)("inlineCode",{parentName:"p"},"Book")," has a ",(0,o.kt)("inlineCode",{parentName:"p"},"publisher")," that can either be a ",(0,o.kt)("inlineCode",{parentName:"p"},"CorporatePublisher")," entity (a row in the ",(0,o.kt)("inlineCode",{parentName:"p"},"corporate_publishers")," table) or a ",(0,o.kt)("inlineCode",{parentName:"p"},"SelfPublisher")," entity (a row in the ",(0,o.kt)("inlineCode",{parentName:"p"},"self_publishers")," table)."),(0,o.kt)("h3",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,"Polymorphic references have two components:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the domain model, they are a single logical field (i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"Book.publisher"),")."),(0,o.kt)("p",{parentName:"li"},"The field type is ",(0,o.kt)("inlineCode",{parentName:"p"},"PolymorphicReference<BookPublisher>"),", where ",(0,o.kt)("inlineCode",{parentName:"p"},"BookPublisher")," is a codegen'd type union of the each potential type, i.e. Joist will create:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"}," export type BookPublisher = CorporatePublisher | SelfPublisher;\n")),(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"BookCodegen.ts")," file.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'In the database schema, they are multiple physical columns, one per "other" entity type (i.e. ',(0,o.kt)("inlineCode",{parentName:"p"},"books.publisher_corporate_publisher_id")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"books.publisher_self_publisher_id"),")"))),(0,o.kt)("h3",{id:"usage"},"Usage"),(0,o.kt)("p",null,"To use polymorphic references, there are two steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create ")),(0,o.kt)("p",null,'In\n"Comment": { "relations": { "parent": { "polymorphic": "notNull" } }, "tag": "comment" },'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Logically in the domain model, they")),(0,o.kt)("h3",{id:"limitations"},"Limitations"))}d.isMDXComponent=!0}}]);