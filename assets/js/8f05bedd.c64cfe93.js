"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[11],{5318:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(7378);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=o,v=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return r?n.createElement(v,a(a({ref:t},u),{},{components:r})):n.createElement(v,a({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7055:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=r(5773),o=r(808),i=(r(7378),r(5318)),a=["components"],s={title:"Goals Overview",slug:"/goals",sidebar_label:"Overview",sidebar_position:1},c=void 0,l={unversionedId:"goals/overview",id:"goals/overview",isDocsHomePage:!1,title:"Goals Overview",description:"The high-level goal of Joist is to bring ActiveRecord-level productivity to TypeScript/Node projects.",source:"@site/docs/goals/overview.md",sourceDirName:"goals",slug:"/goals",permalink:"/joist-ts/docs/goals",editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/goals/overview.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Goals Overview",slug:"/goals",sidebar_label:"Overview",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"clone-sample-project",permalink:"/joist-ts/docs/getting-started/clone-sample-project"},next:{title:"Code Generation",permalink:"/joist-ts/docs/goals/code-generation"}},u=[],p={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The high-level goal of Joist is to bring ",(0,i.kt)("a",{parentName:"p",href:"https://guides.rubyonrails.org/active_record_basics.html"},"ActiveRecord"),"-level productivity to TypeScript/Node projects."),(0,i.kt)("p",null,"Obviously this is a lofty goal, and Joist has only just started down that road, but that is the standard Joist strives for and ideally can surpass."))}d.isMDXComponent=!0}}]);