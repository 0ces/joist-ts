"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[70],{5318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2762:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(5773),o=n(808),a=(n(7378),n(5318)),i=["components"],l={title:"Idiomatic Not Null Support",sidebar_position:1},s=void 0,u={unversionedId:"features/idiomatic-not-null-support",id:"features/idiomatic-not-null-support",isDocsHomePage:!1,title:"Idiomatic Not Null Support",description:"Joist domain objects automatically model null and not null correctly.",source:"@site/docs/features/idiomatic-not-null-support.md",sourceDirName:"features",slug:"/features/idiomatic-not-null-support",permalink:"/joist-ts/docs/features/idiomatic-not-null-support",editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/features/idiomatic-not-null-support.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Idiomatic Not Null Support",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/joist-ts/docs/features"},next:{title:"Fast Database Resets",permalink:"/joist-ts/docs/features/fast-database-resets"}},p=[],c={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Joist domain objects automatically model ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"not null")," correctly."),(0,a.kt)("p",null,"I.e. for a table like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'                     Table "public.authors"\n    Column    |           Type           | Nullable\n--------------+--------------------------+----------+\n id           | integer                  | not null |\n first_name   | character varying(255)   | not null |\n last_name    | character varying(255)   |          |\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Author")," domain object will appropriately null/non-null properties:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"class AuthorCodegen {\n  get firstName(): string {\n    ...\n  }\n\n  set firstName(firstName: string) {\n    ...\n  }\n\n  get lastName(): string | undefined {\n    ...\n  }\n\n  set lastName(lastName: string | undefined) {\n    ...\n  }\n}\n")),(0,a.kt)("p",null,"The non-null ",(0,a.kt)("inlineCode",{parentName:"p"},"firstName")," is enforced on construction:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'new Author(em, { firstName: "is required" });\n')),(0,a.kt)("p",null,"I.e. you cannot call ",(0,a.kt)("inlineCode",{parentName:"p"},"new Author()")," and then forget to set ",(0,a.kt)("inlineCode",{parentName:"p"},"firstName"),"."),(0,a.kt)("p",null,"The appropriate null/non-null-ness is also enforced in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Author.set")," method:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'author.set({ firstName: "cannotBeNull" });\n')),(0,a.kt)("p",null,"Although ",(0,a.kt)("inlineCode",{parentName:"p"},"set")," does accept a ",(0,a.kt)("inlineCode",{parentName:"p"},"Partial")," (i.e. for updating an existing ",(0,a.kt)("inlineCode",{parentName:"p"},"Author")," instance), so if you don't want to change ",(0,a.kt)("inlineCode",{parentName:"p"},"firstName"),", you don't have to pass it to ",(0,a.kt)("inlineCode",{parentName:"p"},"set"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'author.set({ lastName: "..." });\n')))}m.isMDXComponent=!0}}]);