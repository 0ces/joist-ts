"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[776],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||l;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},546:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(5773),a=n(808),l=(n(7378),n(5318)),o=["components"],i={title:"Nullable Columns",sidebar_position:1},s=void 0,u={unversionedId:"features/nullable-columns",id:"features/nullable-columns",isDocsHomePage:!1,title:"Nullable Columns",description:"Joist's domain objects automatically model null and not null columns appropriately.",source:"@site/docs/features/nullable-columns.md",sourceDirName:"features",slug:"/features/nullable-columns",permalink:"/docs/features/nullable-columns",editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/features/nullable-columns.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Nullable Columns",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/features"},next:{title:"Fast Database Resets",permalink:"/docs/features/fast-database-resets"}},c=[{value:"Type Checking",id:"type-checking",children:[],level:3},{value:"Partial Updates",id:"partial-updates",children:[],level:3}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Joist's domain objects automatically model ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"not null")," columns appropriately."),(0,l.kt)("p",null,"I.e. for a table like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'                     Table "public.authors"\n    Column    |           Type           | Nullable\n--------------+--------------------------+----------+\n id           | integer                  | not null |\n first_name   | character varying(255)   | not null |\n last_name    | character varying(255)   |          |\n')),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Author")," domain object will use ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"string | undefined"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"class AuthorCodegen {\n  get firstName(): string { ... }\n  set firstName(firstName: string) { ... }\n  get lastName(): string | undefined { ... }\n  set lastName(lastName: string | undefined) { ... }\n}\n")),(0,l.kt)("h3",{id:"type-checking"},"Type Checking"),(0,l.kt)("p",null,"The non-null ",(0,l.kt)("inlineCode",{parentName:"p"},"firstName")," is enforced on construction:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'// Valid\nnew Author(em, { firstName: "bob" });\n// Not valid\nnew Author(em, {});\n// Not valid\nnew Author(em, { firstName: null });\n// Not valid\nnew Author(em, { firstName: undefined });\n')),(0,l.kt)("p",null,"And for updates made via the ",(0,l.kt)("inlineCode",{parentName:"p"},"set")," method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'// Valid\nauthor.set({ firstName: "bob" });\n// Valid, because `set` accepts a Partial\nauthor.set({});\n// Not valid\nauthor.set({ firstName: null });\n// Technically valid b/c `set` accepts a Partial, but is a noop\nauthor.set({ firstName: undefined });\n')),(0,l.kt)("h3",{id:"partial-updates"},"Partial Updates"),(0,l.kt)("p",null,"Although ",(0,l.kt)("inlineCode",{parentName:"p"},"set")," does accept a ",(0,l.kt)("inlineCode",{parentName:"p"},"Partial")," (i.e. for updating an existing ",(0,l.kt)("inlineCode",{parentName:"p"},"Author")," instance), so if you don't want to change ",(0,l.kt)("inlineCode",{parentName:"p"},"firstName"),", you don't have to pass it to ",(0,l.kt)("inlineCode",{parentName:"p"},"set"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},'author.set({ lastName: "..." });\n')))}d.isMDXComponent=!0}}]);