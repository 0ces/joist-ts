"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[676],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7378);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3300:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=n(2685),i=n(1244),o=(n(7378),n(5318)),a=["components"],l={title:"Sample Project",sidebar_position:1},p=void 0,s={unversionedId:"getting-started/sample-project",id:"getting-started/sample-project",title:"Sample Project",description:"The Joist Sample App is a minimal repository setup with Joist.",source:"@site/docs/getting-started/sample-project.md",sourceDirName:"getting-started",slug:"/getting-started/sample-project",permalink:"/docs/getting-started/sample-project",editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/getting-started/sample-project.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Sample Project",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/docs/getting-started"},next:{title:"Adding to Your Project",permalink:"/docs/getting-started/adding-to-your-project"}},u=[{value:"Running Locally",id:"running-locally",children:[],level:2},{value:"Example Workflow",id:"example-workflow",children:[],level:2}],c={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Joist ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/stephenh/joist-ts-sample"},"Sample App")," is a minimal repository setup with Joist."),(0,o.kt)("p",null,"It does not include exposing the domain objects via a REST/GraphQL/etc. API, but just shows a minimal setup for working solely with the domain objects."),(0,o.kt)("h2",{id:"running-locally"},"Running Locally"),(0,o.kt)("p",null,"To run the sample project locally, run these commands:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"git clone git@github.com:stephenh/joist-ts-sample.git")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"cd joist-ts-sample")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm i")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docker-compose up -d db")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm run joist-migrate")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm test"))),(0,o.kt)("p",null,"And you should see the tests pass."),(0,o.kt)("h2",{id:"example-workflow"},"Example Workflow"),(0,o.kt)("p",null,"A typical workflow for adding a new entity looks like:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},'npm run joist-new-migration "add publisher"')),(0,o.kt)("li",{parentName:"ul"},"Edit the ",(0,o.kt)("inlineCode",{parentName:"li"},"migrations/...add-publisher.ts")," file to include to create the new table:",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},'  createEntityTable(pgm, "publishers", {\n    name: { type: "text", notNull: true },\n  });\n'))),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run joist-migrate")," to apply the migration",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"docker-compose exec db ./reset.sh")," if you need to redo the migration"))),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"npm run joist-codegen")," to create/update the entities"),(0,o.kt)("li",{parentName:"ul"},"Copy/paste the ",(0,o.kt)("inlineCode",{parentName:"li"},"Author.test.ts")," and write a test for the new ",(0,o.kt)("inlineCode",{parentName:"li"},"Publisher")," entity")))}m.isMDXComponent=!0}}]);