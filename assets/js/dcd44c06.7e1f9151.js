"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[790],{5318:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var a=t(7378);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=r,m=p["".concat(s,".").concat(f)]||p[f]||u[f]||o;return t?a.createElement(m,i(i({ref:n},d),{},{components:t})):a.createElement(m,i({ref:n},d))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4051:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=t(2685),r=t(1244),o=(t(7378),t(5318)),i=["components"],l={title:"Finders",sidebar_position:1},s=void 0,c={unversionedId:"querying/finders",id:"querying/finders",title:"Finders",description:"As a general rule of thumb, take a look at the unit tests in the Joist repo.",source:"@site/docs/querying/finders.md",sourceDirName:"querying",slug:"/querying/finders",permalink:"/docs/querying/finders",draft:!1,editUrl:"https://github.com/stephen/joist-ts/edit/main/docs/docs/querying/finders.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Finders",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Validation Rules",permalink:"/docs/modeling/validation-rules"},next:{title:"Unit of Work",permalink:"/docs/querying/unit-of-work"}},d={},u=[{value:"<code>#load</code>",id:"load",level:3},{value:"<code>#loadAll</code>",id:"loadall",level:3},{value:"<code>#loadAllIfExists</code>",id:"loadallifexists",level:3},{value:"<code>#loadFromQuery</code>",id:"loadfromquery",level:3},{value:"<code>#find</code>",id:"find",level:3},{value:"<code>#findOne</code>",id:"findone",level:3},{value:"<code>#findOneOrFail</code>",id:"findoneorfail",level:3},{value:"<code>#findOrCreate</code>",id:"findorcreate",level:3}],p={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"As a general rule of thumb, take a look at the unit tests in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/stephenh/joist-ts/blob/main/packages/integration-tests/src/EntityManager.test.ts"},"Joist repo"),"."),(0,o.kt)("h3",{id:"load"},(0,o.kt)("inlineCode",{parentName:"h3"},"#load")),(0,o.kt)("p",null,"Load an instance of a given entity and id"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const em = newEntityManager();\nconst a = await em.load(Author, "a:1");\n')),(0,o.kt)("h3",{id:"loadall"},(0,o.kt)("inlineCode",{parentName:"h3"},"#loadAll")),(0,o.kt)("p",null,"Load a instances of a given entity and ids"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const em = newEntityManager();\nconst a = await em.loadAll(Author, ["a:1", "a:2]);\n')),(0,o.kt)("h3",{id:"loadallifexists"},(0,o.kt)("inlineCode",{parentName:"h3"},"#loadAllIfExists")),(0,o.kt)("p",null,"Load a instances of a given entity and ids if exists in cache"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const em = newEntityManager();\nconst a = await em.loadAllIfExists(Author, ["a:1", "a:2]);\n')),(0,o.kt)("h3",{id:"loadfromquery"},(0,o.kt)("inlineCode",{parentName:"h3"},"#loadFromQuery")),(0,o.kt)("p",null,"Load a instance of a given entity and Knex QueryBuilder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const em = newEntityManager();\nconst authors = await em.loadFromQuery(Author, knex.select("*").from("authors"));\n')),(0,o.kt)("h3",{id:"find"},(0,o.kt)("inlineCode",{parentName:"h3"},"#find")),(0,o.kt)("p",null,"Query an entity and given where clause"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const em = newEntityManager();\nconst authors = await em.find(Author, { email: 'foo@bar.com });\n")),(0,o.kt)("p",null,"You can also query based on an association"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'const books = await em.find(Book, { author: { firstName: "a2" } });\n')),(0,o.kt)("h3",{id:"findone"},(0,o.kt)("inlineCode",{parentName:"h3"},"#findOne")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const em = newEntityManager();\nconst author = await em.findOne(Author, { email: 'foo@bar.com });\n")),(0,o.kt)("h3",{id:"findoneorfail"},(0,o.kt)("inlineCode",{parentName:"h3"},"#findOneOrFail")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const em = newEntityManager();\nconst author = await em.findOneOrFail(Author, { email: 'foo@bar.com });\n")),(0,o.kt)("h3",{id:"findorcreate"},(0,o.kt)("inlineCode",{parentName:"h3"},"#findOrCreate")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const em = newEntityManager();\nconst author = await em.findOrCreate(Author, { email: 'foo@bar.com });\n")))}f.isMDXComponent=!0}}]);